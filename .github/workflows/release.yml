name: Build & Release gem (push to gembro + GitHub Releases)

on:
  push:
    tags:
      - "v*.*.*"   # e.g. v0.1.3
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: "üß∞ Check out"
        uses: actions/checkout@v4

      - name: "üß± Set up Ruby"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: false

      - name: "üß© Install geminabox client"
        run: |
          gem install geminabox rubygems-generate_index --no-document

      - name: "üì¶ Build gem"
        run: |
          gem --version
          ruby -v
          gem build *.gemspec
          echo "GEM_FILE=$(ls -1 *.gem | head -n1)" >> $GITHUB_ENV
          echo "Built: $(ls -1 *.gem | head -n1)"

      - name: "üßÆ Read version from lib"
        id: ver
        shell: bash
        run: |
          FILE_VER=$(ruby -e 'load "lib/shiny/rocks/version.rb"; puts Shiny::Rocks::VERSION')
          echo "ver=$FILE_VER" >> "$GITHUB_OUTPUT"
          echo "File version: $FILE_VER"

      - name: "üîç Sanity check: version tag matches lib/shiny/rocks/version.rb"
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME:-}"
          if [[ -n "$TAG" && "$TAG" =~ ^v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            TAG_VER="${BASH_REMATCH[1]}"
            FILE_VER="${{ steps.ver.outputs.ver }}"
            if [[ "$TAG_VER" != "$FILE_VER" ]]; then
              echo "Tag $TAG does not match lib version $FILE_VER" >&2
              exit 1
            fi
            echo "Version OK: tag=$TAG_VER file=$FILE_VER"
          else
            echo "No semver tag detected; continuing (manual run)."
          fi


      - name: "‚¨ÜÔ∏è Push to gembro.live (Geminabox)"
        env:
          GEMBRO_USER: ${{ secrets.GEMBRO_USER }}
          GEMBRO_PASS: ${{ secrets.GEMBRO_PASS }}
        run: |
          if [[ -z "$GEMBRO_USER" || -z "$GEMBRO_PASS" ]]; then
            echo "Missing secrets GEMBRO_USER/GEMBRO_PASS" >&2
            exit 1
          fi

          # URL-encode the password (handles #, @, %, etc.)
          enc_pass=$(python3 -c "import urllib.parse, os; print(urllib.parse.quote(os.environ['GEMBRO_PASS']))")

          # Push gem using geminabox client with inline user:pass in URL
          gem inabox "$GEM_FILE" \
            -g "https://${GEMBRO_USER}:${enc_pass}@gembro.live/"

      - name: "üè∑Ô∏è Create GitHub Release (attach .gem)"
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.GEM_FILE }}
          token: ${{ github.token }}
          # If we're on a tag push, github.ref_name is like v0.1.0.
          # If we're on a manual run, create a tag from the file version.
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || format('v{0}', steps.ver.outputs.ver) }}
          target_commitish: ${{ github.sha }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || format('v{0}', steps.ver.outputs.ver) }}
          generate_release_notes: true